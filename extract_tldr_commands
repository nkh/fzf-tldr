#!/bin/env perl 

use strict ; use warnings ;
use v5.10 ;

my @header ;

/^-/ and @_ = ($_, <>) or push @header, $_ while <> ;

my $max_example_length = 0 ;

while( @_ )
	{
	(my $description, $a, my $example, $b) = map { $_ // '' } splice @_, 0, 4 ;

	$b //= '' ;
	chomp ($description, $a, $example, $b) ;

	$description =~ s/\s*-\s*// ;

	$example =~ s/^`// ;
	$example =~ s/`$// ;

	my $example_length  = length $example ;
	$max_example_length = $example_length if $example_length > $max_example_length ;

	$_{$description} = $example ;
	}

shift @header ; shift @header ;

print map { s/^..// ; "\e[1;40;30m$_" } @header ;

for(keys %_)
	{
	my $line = sprintf "%-${max_example_length}s", $_{$_} ;
	
	$line =~ s/(-[^ ]+)/\e[2;33m$1\e[m/g ;
	$line =~ s/( \{\{ .+? \}\} )/\e[36m$1\e[m/xg ;

	say "\e[34m# $_\e[m\n\n    $line\n" ;
	}

#! vim: set ft=perl:

